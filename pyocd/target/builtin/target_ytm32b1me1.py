# pyOCD debugger
# Copyright (c) 2022 Yuntu Microelectronics
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from ...coresight.coresight_target import CoreSightTarget
from ...core.memory_map import (FlashRegion, RamRegion, MemoryMap)


FLASH_ALGO = {
    'load_address' : 0x20000000,

    # Flash algorithm as a hex string
    'instructions': [
    0xe7fdbe00,
    0x8f6ff3bf, 0x8f4ff3bf, 0x680048e3, 0x06092185, 0x49e14308, 0xbf006008, 0x680048df, 0x07c00fc0,
    0x07c92101, 0xd0f74288, 0x8f6ff3bf, 0x8f4ff3bf, 0x46014770, 0x684048d9, 0x60504ad8, 0x4ad948d8,
    0xb2c86010, 0x60904ad5, 0x48d4bf00, 0x07c06840, 0x28000fc0, 0x48d1d105, 0x22086840, 0x28084010,
    0x48ced1f3, 0x221e6840, 0x28004010, 0x2001d001, 0x20004770, 0xb570e7fc, 0x460d4604, 0x48ca4616,
    0x49ca6800, 0x60084449, 0x690048c7, 0x444949c8, 0x48c56008, 0x49c76840, 0x60084449, 0x304048c2,
    0x49c56800, 0x60084449, 0x680048bc, 0x444949c3, 0x48c36008, 0x49c36840, 0x60084449, 0x690048b7,
    0x444949c1, 0x48b56008, 0x49c06940, 0x60084449, 0x680048b1, 0x444949be, 0x20006008, 0x314049b2,
    0xf3bf6008, 0x48b08f4f, 0x21016900, 0x49ae4308, 0x48b36108, 0x21026880, 0x28004008, 0x48b5d10a,
    0x600849af, 0x600848b4, 0x68404608, 0x00400840, 0xe0046048, 0x49aa48b1, 0x48b16008, 0xbf006008,
    0x688048a1, 0x40082104, 0xd1f92804, 0x499e2003, 0xbf006008, 0x6880489c, 0x0f800780, 0xd1f92803,
    0x49992001, 0xbf006048, 0x68c04897, 0xd1fb2801, 0x4895bf00, 0x21046880, 0x28044008, 0x2000d1f9,
    0x60084991, 0x4890bf00, 0x07806880, 0x28000f80, 0x489cd1f9, 0x60084989, 0x6108489b, 0x6148489b,
    0x49852000, 0xf7ff6008, 0xbf00ff3b, 0x68404883, 0x60484982, 0xbf00bf00, 0x68404880, 0x40082180,
    0xd0f92800, 0xbd702000, 0x4604b510, 0x44484881, 0x497d6800, 0xbf006048, 0x68c0487b, 0x4449497d,
    0x42886809, 0x4879d1f8, 0x68004448, 0x60084976, 0x4875bf00, 0x07806880, 0x49740f80, 0x68094449,
    0xd1f64288, 0x44484872, 0x496f6800, 0x48726108, 0x68004448, 0x3140496c, 0x48706008, 0x68004448,
    0x60084966, 0x44484870, 0x61086800, 0x4448486f, 0x61486800, 0xfef4f7ff, 0x4448486d, 0x495e6800,
    0xf3bf6008, 0xf3bf8f6f, 0x48658f4f, 0x21026880, 0x28004008, 0x4867d108, 0x60084961, 0x60084866,
    0x44484860, 0x60486800, 0xbd102000, 0x2400b510, 0x49524867, 0x46086148, 0x21016800, 0x43080309,
    0x6008494e, 0x8f6ff3bf, 0x8f4ff3bf, 0x21004861, 0xf3bf6008, 0xf3bf8f6f, 0x48488f4f, 0x21016800,
    0x43880309, 0x60084945, 0xf7ff2011, 0x1904fed2, 0x68004842, 0x03092101, 0x49404308, 0xf3bf6008,
    0xf3bf8f6f, 0x48538f4f, 0x04c92101, 0xf3bf6008, 0xf3bf8f6f, 0x48398f4f, 0x21016800, 0x43880309,
    0x60084936, 0xf7ff2011, 0x1904feb4, 0xbd104620, 0x4604b510, 0x493a4841, 0x48416008, 0x48436008,
    0x6148492e, 0x68004608, 0x03092101, 0x492b4308, 0xf3bf6008, 0xf3bf8f6f, 0x483e8f4f, 0xf3bf6020,
    0xf3bf8f6f, 0x48258f4f, 0x21016800, 0x43880309, 0x60084922, 0xf7ff2010, 0xbd10fe8c, 0xb082b5f7,
    0x460d4604, 0x46279e04, 0x90012008, 0xbf009500, 0x4923482a, 0x482a6008, 0x48186008, 0x21016800,
    0x43080309, 0x60084915, 0x8f6ff3bf, 0x8f4ff3bf, 0xe0022000, 0xc702ce02, 0x28021c40, 0xf3bfdbfa,
    0xf3bf8f6f, 0x480d8f4f, 0x21016800, 0x43880309, 0x6008490a, 0xf7ff2001, 0x2800fe5c, 0x2001d002,
    0xbdf0b005, 0x98009901, 0x90001a40, 0x28009800, 0x2000dcce, 0x0000e7f4, 0xe0080000, 0x40040000,
    0xfd9573f5, 0x40040200, 0x401f0000, 0x00000004, 0x00000008, 0x0000000c, 0x00000010, 0x00000014,
    0x401a8000, 0x00000020, 0x00000018, 0x0000001c, 0x00000024, 0x0000b631, 0x0000c278, 0x0000a518,
    0x0000d826, 0x000c0100, 0x00b40011, 0x00001770, 0x00013880, 0x12345678, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ],

    # Relative function addresses
    'pc_init': 0x2000007b,
    'pc_unInit': 0x200001ad,
    'pc_program_page': 0x20000321,
    'pc_erase_sector': 0x200002d5,
    'pc_eraseAll': 0x20000251,

    'static_base' : 0x20000000 + 0x00000004 + 0x000003f8,
    'begin_stack' : 0x20001630 + 0x2000,
    'end_stack' : 0x20000630 + 0x2000,
    'begin_data' : 0x20000000 + 0x1000,
    'page_size' : 0x100,
    'analyzer_supported' : False,
    'analyzer_address' : 0x00000000,
    # Enable double buffering
    'page_buffers' : [
        0x20000430,
        0x20000530
    ],
    'min_program_length' : 0x100,

    # Relative region addresses and sizes
    'ro_start': 0x4,
    'ro_size': 0x3f8,
    'rw_start': 0x3fc,
    'rw_size': 0x28,
    'zi_start': 0x424,
    'zi_size': 0x0,

    # Flash information
    'flash_start': 0x0,
    'flash_size': 0x100000,
    'sector_sizes': (
        (0x0, 0x400),
    )
}


class YTM32B1ME1(CoreSightTarget):

    VENDOR = "Yuntu Microelectronics"
    
    MEMORY_MAP = MemoryMap(
        FlashRegion(    start=0x00000000,  length=0x100000,      blocksize=0x800, is_boot_memory=True, algo=FLASH_ALGO),
        RamRegion(      start=0x20000000,  length=0x10000)
        )

    def __init__(self, session):
        super().__init__(session, self.MEMORY_MAP)
