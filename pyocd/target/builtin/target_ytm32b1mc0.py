# pyOCD debugger
# Copyright (c) 2022 Yuntu Microelectronics
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from ...coresight.coresight_target import CoreSightTarget
from ...core.memory_map import (FlashRegion, RamRegion, MemoryMap)

MAIN_FLASH_ALGO = {
    'load_address' : 0x20000000,

    # Flash algorithm as a hex string
    'instructions': [
    0xe7fdbe00,
    0x48c44601, 0x4ac36840, 0x48c36050, 0x60104ac3, 0x4ac0b2c8, 0xbf006090, 0x684048be, 0x0fc007c0,
    0xd1052800, 0x684048bb, 0x40102208, 0xd1f32808, 0x684048b8, 0x40104aba, 0xd0012800, 0x47702001,
    0xe7fc2000, 0x4603b510, 0x680048b6, 0x444c4cb6, 0x48b46020, 0x4cb56900, 0x6020444c, 0x684048b1,
    0x444c4cb3, 0x48af6020, 0x68003040, 0x444c4cb1, 0x48a86020, 0x4cb06800, 0x6020444c, 0x684048af,
    0x444c4caf, 0x48a36020, 0x4cae6900, 0x6020444c, 0x694048a0, 0x444c4cac, 0x20006020, 0x34404ca1,
    0xf3bf6020, 0x489f8f4f, 0x24016900, 0x4c9d4320, 0x48a26120, 0x24026880, 0x28004020, 0x48a3d10a,
    0x60204c9e, 0x602048a2, 0x68404620, 0x00400840, 0xe0046060, 0x4c99489f, 0x489f6020, 0x20036020,
    0x60204c90, 0x488fbf00, 0x07806880, 0x28030f80, 0x2001d1f9, 0x60604c8b, 0x488abf00, 0x280168c0,
    0xbf00d1fb, 0x68804887, 0x40202404, 0xd1f92804, 0x4c842000, 0xbf006020, 0x68804882, 0x0f800780,
    0xd1f92800, 0x4c7b488d, 0x200d6020, 0x488c6120, 0xbf006160, 0x68404620, 0xbf006060, 0x4875bf00,
    0x24806840, 0x28004020, 0x2000d0f9, 0x4601bd10, 0x44484877, 0x4a736800, 0xbf006050, 0x68c04871,
    0x444a4a73, 0x42906812, 0x486fd1f8, 0x68004448, 0x60104a6c, 0x486bbf00, 0x07806880, 0x4a6a0f80,
    0x6812444a, 0xd1f64290, 0x44484868, 0x4a656800, 0x48686110, 0x68004448, 0x32404a62, 0x48666010,
    0x68004448, 0x60104a5b, 0x44484866, 0x61106800, 0x44484865, 0x61506800, 0x68804860, 0x40102202,
    0xd1082800, 0x4a5d4861, 0x48616010, 0x485c6010, 0x68004448, 0x20006050, 0xb5104770, 0x48612400,
    0x6148494c, 0x68004608, 0x43081489, 0x60084949, 0x8f6ff3bf, 0x8f4ff3bf, 0x2100485b, 0xbf006008,
    0x68404844, 0x40082140, 0xd0f92800, 0x8f6ff3bf, 0x8f4ff3bf, 0xf7ff2011, 0x1904fef3, 0x8f6ff3bf,
    0x8f4ff3bf, 0x21014850, 0x60080449, 0x8f6ff3bf, 0x8f4ff3bf, 0xf7ff2011, 0x1904fee3, 0xbd104620,
    0x4604b510, 0x493d4843, 0x48436008, 0x48446008, 0x61484930, 0x68004608, 0x43081489, 0x6008492d,
    0x8f6ff3bf, 0x8f4ff3bf, 0x6020483f, 0x4829bf00, 0x21406840, 0x28004008, 0xf3bfd0f9, 0xf3bf8f6f,
    0x48248f4f, 0x21016800, 0x43880309, 0x60084921, 0xf7ff2010, 0xbd10feb5, 0xb082b5f7, 0x460d4604,
    0x46279e04, 0x90012008, 0xbf009500, 0x49234829, 0x48296008, 0x48176008, 0x21016800, 0x43080309,
    0x60084914, 0x8f6ff3bf, 0x8f4ff3bf, 0xe0092000, 0xc702ce02, 0x490fbf00, 0x22406849, 0x29004011,
    0x1c40d0f9, 0xdbf32802, 0x8f6ff3bf, 0x8f4ff3bf, 0xf7ff2001, 0x2800fe85, 0x2001d002, 0xbdf0b005,
    0x98009901, 0x90001a40, 0x28009800, 0x2000dcce, 0x0000e7f4, 0x40010000, 0xfd9573f5, 0x40010200,
    0x0700001e, 0x4007c000, 0x00000004, 0x00000008, 0x0000000c, 0x00000010, 0x00000014, 0x4006a000,
    0x00000020, 0x00000018, 0x0000001c, 0x0000b631, 0x0000c278, 0x0000a518, 0x0000d826, 0x00140200,
    0x00001770, 0x00013880, 0x12345678, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000
    ],

    # Relative function addresses
    'pc_init': 0x20000049,
    'pc_unInit': 0x20000153,
    'pc_program_page': 0x2000029d,
    'pc_erase_sector': 0x20000245,
    'pc_eraseAll': 0x200001df,

    'static_base' : 0x20000000 + 0x00000004 + 0x0000036c,
    'begin_stack' : 0x200035a0,
    'end_stack' : 0x200025a0,
    'begin_data' : 0x20000000 + 0x1000,
    'page_size' : 0x100,
    'analyzer_supported' : False,
    'analyzer_address' : 0x00000000,
    # Enable double buffering
    'page_buffers' : [
        0x200003a0,
        0x200004a0
    ],
    'min_program_length' : 0x100,

    # Relative region addresses and sizes
    'ro_start': 0x4,
    'ro_size': 0x36c,
    'rw_start': 0x370,
    'rw_size': 0x24,
    'zi_start': 0x394,
    'zi_size': 0x0,

    # Flash information
    'flash_start': 0x0,
    'flash_size': 0x40000,
    'sector_sizes': (
        (0x0, 0x200),
    )
}
DATA_FLASH_ALGO = {
    'load_address' : 0x20000000,

    # Flash algorithm as a hex string
    'instructions': [
    0xe7fdbe00,
    0x48b94601, 0x4ab86840, 0x48b86050, 0x60104ab8, 0x4ab5b2c8, 0xbf006090, 0x684048b3, 0x0fc007c0,
    0xd1052800, 0x684048b0, 0x40102208, 0xd1f32808, 0x684048ad, 0x40104aaf, 0xd0012800, 0x47702001,
    0xe7fc2000, 0x4603b510, 0x680048ab, 0x444c4cab, 0x48a96020, 0x4caa6900, 0x6020444c, 0x684048a6,
    0x444c4ca8, 0x48a46020, 0x68003040, 0x444c4ca6, 0x489d6020, 0x4ca56800, 0x6020444c, 0x684048a4,
    0x444c4ca4, 0x48986020, 0x4ca36900, 0x6020444c, 0x69404895, 0x444c4ca1, 0x20006020, 0x34404c96,
    0xf3bf6020, 0x48948f4f, 0x24016900, 0x4c924320, 0x48976120, 0x24026880, 0x28004020, 0x4898d10a,
    0x60204c93, 0x60204897, 0x68404620, 0x00400840, 0xe0046060, 0x4c8e4894, 0x48946020, 0x20036020,
    0x60204c85, 0x4884bf00, 0x07806880, 0x28030f80, 0x2001d1f9, 0x60604c80, 0x487fbf00, 0x280168c0,
    0xbf00d1fb, 0x6880487c, 0x40202404, 0xd1f92804, 0x4c792000, 0xbf006020, 0x68804877, 0x0f800780,
    0xd1f92800, 0x4c704882, 0x200d6020, 0x48816120, 0xbf006160, 0x68404620, 0xbf006060, 0x486abf00,
    0x24806840, 0x28004020, 0x2000d0f9, 0x4601bd10, 0x4448486c, 0x4a686800, 0xbf006050, 0x68c04866,
    0x444a4a68, 0x42906812, 0x4864d1f8, 0x68004448, 0x60104a61, 0x4860bf00, 0x07806880, 0x4a5f0f80,
    0x6812444a, 0xd1f64290, 0x4448485d, 0x4a5a6800, 0x485d6110, 0x68004448, 0x32404a57, 0x485b6010,
    0x68004448, 0x60104a50, 0x4448485b, 0x61106800, 0x4448485a, 0x61506800, 0x68804855, 0x40102202,
    0xd1082800, 0x4a524856, 0x48566010, 0x48516010, 0x68004448, 0x20006050, 0xb5104770, 0x48524604,
    0x6008494b, 0x60084851, 0x493f4852, 0x46086148, 0x14896800, 0x493c4308, 0xf3bf6008, 0xf3bf8f6f,
    0x484d8f4f, 0xbf006020, 0x68404837, 0x40082140, 0xd0f92800, 0x8f6ff3bf, 0x8f4ff3bf, 0x68004832,
    0x03092101, 0x49304388, 0x20106008, 0xfee8f7ff, 0xb570bd10, 0x24002500, 0xe0064c40, 0xf7ff4620,
    0x1945ffcc, 0x34ff34ff, 0x483d3402, 0xd3f54284, 0xe0064c3c, 0xf7ff4620, 0x1945ffc0, 0x34ff34ff,
    0x48393402, 0xd3f54284, 0xbd704628, 0xb082b5f7, 0x460d4604, 0x46279e04, 0x90012008, 0xbf009500,
    0x49234829, 0x48296008, 0x48176008, 0x21016800, 0x43080309, 0x60084914, 0x8f6ff3bf, 0x8f4ff3bf,
    0xe0092000, 0xc702ce02, 0x490fbf00, 0x22406849, 0x29004011, 0x1c40d0f9, 0xdbf32802, 0x8f6ff3bf,
    0x8f4ff3bf, 0xf7ff2001, 0x2800fe9b, 0x2001d002, 0xbdf0b005, 0x98009901, 0x90001a40, 0x28009800,
    0x2000dcce, 0x0000e7f4, 0x40010000, 0xfd9573f5, 0x40010200, 0x0700001e, 0x4007c000, 0x00000004,
    0x00000008, 0x0000000c, 0x00000010, 0x00000014, 0x4006a000, 0x00000020, 0x00000018, 0x0000001c,
    0x0000b631, 0x0000c278, 0x0000a518, 0x0000d826, 0x00140200, 0x00001770, 0x12345678, 0x10001000,
    0x10003800, 0x10011000, 0x10013800, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000
    ],

    # Relative function addresses
    'pc_init': 0x20000049,
    'pc_unInit': 0x20000153,
    'pc_program_page': 0x20000271,
    'pc_erase_sector': 0x200001df,
    'pc_eraseAll': 0x20000237,

    'static_base' : 0x20000000 + 0x00000004 + 0x0000034c,
    'begin_stack' : 0x20003580,
    'end_stack' : 0x20002580,
    'begin_data' : 0x20000000 + 0x1000,
    'page_size' : 0x100,
    'analyzer_supported' : False,
    'analyzer_address' : 0x00000000,
    # Enable double buffering
    'page_buffers' : [
        0x20000380,
        0x20000480
    ],
    'min_program_length' : 0x100,

    # Relative region addresses and sizes
    'ro_start': 0x4,
    'ro_size': 0x34c,
    'rw_start': 0x350,
    'rw_size': 0x24,
    'zi_start': 0x374,
    'zi_size': 0x0,

    # Flash information
    'flash_start': 0x10001000,
    'flash_size': 0x2800,
    'sector_sizes': (
        (0x0, 0x200),
    )
}

class YTM32B1MC0(CoreSightTarget):

    VENDOR = "Yuntu Microelectronics"

    MEMORY_MAP = MemoryMap(
        FlashRegion(    start=0x00000000,  length=0x040000,      blocksize=0x200, is_boot_memory=True,  algo=MAIN_FLASH_ALGO),
        FlashRegion(    start=0x10001000,  length=0x002800,      blocksize=0x200, is_boot_memory=False, algo=DATA_FLASH_ALGO),
        FlashRegion(    start=0x10011000,  length=0x002800,      blocksize=0x200, is_boot_memory=False, algo=DATA_FLASH_ALGO),
        RamRegion(      start=0x20000000,  length=0x10000)
        )

    def __init__(self, session):
        super().__init__(session, self.MEMORY_MAP)

