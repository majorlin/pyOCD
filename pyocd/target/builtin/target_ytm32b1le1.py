# pyOCD debugger
# Copyright (c) 2022 Yuntu Microelectronics
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from ...coresight.coresight_target import CoreSightTarget
from ...core.memory_map import (FlashRegion, RamRegion, MemoryMap)

FLASH_ALGO = {
    'load_address' : 0x20000000,

    # Flash algorithm as a hex string
    'instructions': [
    0xe7fdbe00,
    0x48bd4601, 0x4abc6840, 0x48bc6050, 0x60104abc, 0x4ab9b2c8, 0xbf006090, 0x684048b7, 0x0fc007c0,
    0xd1052800, 0x684048b4, 0x40102208, 0xd1f32808, 0x684048b1, 0x40104ab3, 0xd0012800, 0x47702001,
    0xe7fc2000, 0x4603b510, 0x680048af, 0x444c4caf, 0x48ad6020, 0x4cae6900, 0x6020444c, 0x684048aa,
    0x444c4cac, 0x48ac6020, 0x4cac6800, 0x6020444c, 0x680048a1, 0x444c4caa, 0x489f6020, 0x4ca96900,
    0x6020444c, 0x6940489c, 0x444c4ca7, 0x48a76020, 0x4ca76840, 0x6020444c, 0x4c9f2000, 0xf3bf6020,
    0x48998f4f, 0x24016900, 0x4c974320, 0x489f6120, 0x24026880, 0x28004020, 0x489ed10a, 0x60204c9b,
    0x6020489d, 0x68404620, 0x00400840, 0xe0046060, 0x4c96489a, 0x489a6020, 0x20036020, 0x60204c8a,
    0x4889bf00, 0x07806880, 0x28030f80, 0x2001d1f9, 0x60604c85, 0x4884bf00, 0x280168c0, 0xbf00d1fb,
    0x68804881, 0x40202404, 0xd1f92804, 0x4c7e2000, 0xbf006020, 0x6880487c, 0x0f800780, 0xd1f92800,
    0x4c754888, 0x20036020, 0x48876120, 0xbf006160, 0x68404620, 0xbf006060, 0x486fbf00, 0x24806840,
    0x28004020, 0x2000d0f9, 0x4601bd10, 0x44484871, 0x4a6d6800, 0xbf006050, 0x68c0486b, 0x444a4a6d,
    0x42906812, 0x4869d1f8, 0x68004448, 0x60104a66, 0x44484867, 0x61106800, 0x4863bf00, 0x07806880,
    0x4a620f80, 0x6812444a, 0xd1f64290, 0x44484863, 0x4a616800, 0x48626010, 0x68004448, 0x60104a56,
    0x44484860, 0x61106800, 0x4448485f, 0x61506800, 0x6880485e, 0x40102202, 0xd1082800, 0x4a5b485d,
    0x485d6010, 0x485a6010, 0x68004448, 0x20006050, 0xb5104770, 0x68004848, 0x03092101, 0x49464308,
    0xf3bf6008, 0xf3bf8f6f, 0x48588f4f, 0x60082100, 0x4841bf00, 0x21406840, 0x28004008, 0xf3bfd0f9,
    0xf3bf8f6f, 0x483c8f4f, 0x21016800, 0x43880309, 0x60084939, 0xf7ff2011, 0xbd10fef3, 0x4604b510,
    0x49424846, 0x48466008, 0x48336008, 0x21016800, 0x43080309, 0x60084930, 0x8f6ff3bf, 0x8f4ff3bf,
    0x60204842, 0x482cbf00, 0x21406840, 0x28004008, 0xf3bfd0f9, 0xf3bf8f6f, 0x48278f4f, 0x21016800,
    0x43880309, 0x60084924, 0xf7ff2010, 0xbd10fec9, 0xb082b5f7, 0x460d4604, 0x46279e04, 0x90012008,
    0xbf009500, 0x4929482d, 0x482d6008, 0x481a6008, 0x21016800, 0x43080309, 0x60084917, 0x8f6ff3bf,
    0x8f4ff3bf, 0xe0092000, 0xc702ce02, 0x4912bf00, 0x22406849, 0x29004011, 0x1c40d0f9, 0xdbf32802,
    0x8f6ff3bf, 0x8f4ff3bf, 0x6800480b, 0x03092101, 0x49094388, 0x20016008, 0xfe92f7ff, 0xd0022800,
    0xb0052001, 0x9901bdf0, 0x1a409800, 0x98009000, 0xdcc72800, 0xe7f42000, 0x40020000, 0xfd9573f5,
    0x40020200, 0x0700001e, 0x40064000, 0x00000004, 0x00000008, 0x0000000c, 0x40078000, 0x00000010,
    0x00000014, 0x00000018, 0x0000001c, 0x40052000, 0x00000020, 0x0000b631, 0x0000c278, 0x0000a518,
    0x0000d826, 0x000c0100, 0x00030003, 0x12345678, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ],

    # Relative function addresses
    'pc_init': 0x20000049,
    'pc_unInit': 0x2000014f,
    'pc_program_page': 0x20000275,
    'pc_erase_sector': 0x20000221,
    'pc_eraseAll': 0x200001d7,

    'static_base' : 0x20000000 + 0x00000004 + 0x00000350,
    'begin_stack' : 0x20003580,
    'end_stack' : 0x20002580,
    'begin_data' : 0x20000000 + 0x1000,
    'page_size' : 0x100,
    'analyzer_supported' : False,
    'analyzer_address' : 0x00000000,
    # Enable double buffering
    'page_buffers' : [
        0x20000380,
        0x20000480
    ],
    'min_program_length' : 0x100,

    # Relative region addresses and sizes
    'ro_start': 0x4,
    'ro_size': 0x350,
    'rw_start': 0x354,
    'rw_size': 0x24,
    'zi_start': 0x378,
    'zi_size': 0x0,

    # Flash information
    'flash_start': 0x0,
    'flash_size': 0x20000,
    'sector_sizes': (
        (0x0, 0x200),
    )
}
DFLASH_ALGO = {
    'load_address' : 0x20000000,

    # Flash algorithm as a hex string
    'instructions': [
    0xe7fdbe00,
    0x48b44601, 0x4ab36840, 0x48b36050, 0x60104ab3, 0x4ab0b2c8, 0xbf006090, 0x684048ae, 0x0fc007c0,
    0xd1052800, 0x684048ab, 0x40102208, 0xd1f32808, 0x684048a8, 0x40104aaa, 0xd0012800, 0x47702001,
    0xe7fc2000, 0x4603b510, 0x680048a6, 0x444c4ca6, 0x48a46020, 0x4ca56900, 0x6020444c, 0x684048a1,
    0x444c4ca3, 0x48a36020, 0x4ca36800, 0x6020444c, 0x68004898, 0x444c4ca1, 0x48966020, 0x4ca06900,
    0x6020444c, 0x69404893, 0x444c4c9e, 0x489e6020, 0x4c9e6840, 0x6020444c, 0x4c962000, 0xf3bf6020,
    0x48908f4f, 0x24016900, 0x4c8e4320, 0x48966120, 0x24026880, 0x28004020, 0x4895d10a, 0x60204c92,
    0x60204894, 0x68404620, 0x00400840, 0xe0046060, 0x4c8d4891, 0x48916020, 0x20036020, 0x60204c81,
    0x4880bf00, 0x07806880, 0x28030f80, 0x2001d1f9, 0x60604c7c, 0x487bbf00, 0x280168c0, 0xbf00d1fb,
    0x68804878, 0x40202404, 0xd1f92804, 0x4c752000, 0xbf006020, 0x68804873, 0x0f800780, 0xd1f92800,
    0x4c6c487f, 0x20036020, 0x487e6120, 0xbf006160, 0x68404620, 0xbf006060, 0x4866bf00, 0x24806840,
    0x28004020, 0x2000d0f9, 0x4601bd10, 0x44484868, 0x4a646800, 0xbf006050, 0x68c04862, 0x444a4a64,
    0x42906812, 0x4860d1f8, 0x68004448, 0x60104a5d, 0x4448485e, 0x61106800, 0x485abf00, 0x07806880,
    0x4a590f80, 0x6812444a, 0xd1f64290, 0x4448485a, 0x4a586800, 0x48596010, 0x68004448, 0x60104a4d,
    0x44484857, 0x61106800, 0x44484856, 0x61506800, 0x68804855, 0x40102202, 0xd1082800, 0x4a524854,
    0x48546010, 0x48516010, 0x68004448, 0x20006050, 0xb5104770, 0x48504604, 0x6008494b, 0x6008484f,
    0x6800483c, 0x03092101, 0x493a4308, 0xf3bf6008, 0xf3bf8f6f, 0x484c8f4f, 0xbf006020, 0x68404835,
    0x40082140, 0xd0f92800, 0x8f6ff3bf, 0x8f4ff3bf, 0x68004830, 0x03092101, 0x492e4388, 0x20106008,
    0xfeeef7ff, 0xb570bd10, 0x24012500, 0xbf000724, 0x4620e006, 0xffcdf7ff, 0x34ff1945, 0x340234ff,
    0x4284483a, 0x4628d3f5, 0xb5f7bd70, 0x4604b082, 0x9e04460d, 0x20084627, 0x95009001, 0x482ebf00,
    0x60084929, 0x6008482d, 0x6800481a, 0x03092101, 0x49184308, 0xf3bf6008, 0xf3bf8f6f, 0x20008f4f,
    0xce02e009, 0xbf00c702, 0x68494912, 0x40112240, 0xd0f92900, 0x28021c40, 0xf3bfdbf3, 0xf3bf8f6f,
    0x480c8f4f, 0x21016800, 0x43880309, 0x60084909, 0xf7ff2001, 0x2800fea5, 0x2001d002, 0xbdf0b005,
    0x98009901, 0x90001a40, 0x28009800, 0x2000dcc7, 0x0000e7f4, 0x40020000, 0xfd9573f5, 0x40020200,
    0x0700001e, 0x40064000, 0x00000004, 0x00000008, 0x0000000c, 0x40078000, 0x00000010, 0x00000014,
    0x00000018, 0x0000001c, 0x40052000, 0x00000020, 0x0000b631, 0x0000c278, 0x0000a518, 0x0000d826,
    0x000c0100, 0x00030003, 0x12345678, 0x10003000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ],

    # Relative function addresses
    'pc_init': 0x20000049,
    'pc_unInit': 0x2000014f,
    'pc_program_page': 0x2000024f,
    'pc_erase_sector': 0x200001d7,
    'pc_eraseAll': 0x2000022b,

    'static_base' : 0x20000000 + 0x00000004 + 0x00000330,
    'begin_stack' : 0x20003560,
    'end_stack' : 0x20002560,
    'begin_data' : 0x20000000 + 0x1000,
    'page_size' : 0x100,
    'analyzer_supported' : False,
    'analyzer_address' : 0x00000000,
    # Enable double buffering
    'page_buffers' : [
        0x20000360,
        0x20000460
    ],
    'min_program_length' : 0x100,

    # Relative region addresses and sizes
    'ro_start': 0x4,
    'ro_size': 0x330,
    'rw_start': 0x334,
    'rw_size': 0x24,
    'zi_start': 0x358,
    'zi_size': 0x0,

    # Flash information
    'flash_start': 0x10000000,
    'flash_size': 0x3000,
    'sector_sizes': (
        (0x0, 0x200),
    )
}

class YTM32B1LE1(CoreSightTarget):

    VENDOR = "Yuntu Microelectronics"

    MEMORY_MAP = MemoryMap(
        FlashRegion(    start=0x00000000,  length=0x20000,      blocksize=0x200, is_boot_memory=True, algo=FLASH_ALGO),
        FlashRegion(    start=0x10000000,  length=0x3000,       blocksize=0x200, is_boot_memory=False, algo=DFLASH_ALGO),
        RamRegion(      start=0x20000000,  length=0x2000)
        )

    def __init__(self, session):
        super().__init__(session, self.MEMORY_MAP)
